#
# Configuration for GitHub-based CI, based on the stock GitHub Rust config.
#
name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-style:
    runs-on: ubuntu-18.04
    steps:
    # actions/checkout@v2
    - uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b
    - name: Report cargo version
      run: cargo --version
    - name: Report rustfmt version
      run: cargo fmt -- --version
    - name: Check style
      run: cargo fmt -- --check

  clippy-lint:
    runs-on: ubuntu-18.04
    steps:
    # actions/checkout@v2
    - uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b
    - name: Report cargo version
      run: cargo --version
    - name: Report Clippy version
      run: cargo clippy -- --version
    - name: Run Clippy Lints
      #
      # Clippy overrides should go into src/lib.rs so that developers running
      # `cargo clippy` see the same behavior as we see here in the GitHub
      # Action.  In some cases, the overrides also need to appear here because
      # clippy does not always honor the crate-wide overrides.  See
      # rust-lang/rust-clippy#6610.
      #
      run: cargo clippy -- -A clippy::style -D warnings

  windows-debug:
    runs-on: windows-2019
    steps:
    # actions/checkout@v2
    - uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b
    - uses: actions-rs/toolchain@b223206e28798aa3c3668bdd6409258e6dc29172
      with:
        profile: minimal
        toolchain: stable
        override: true
    # As these steps are used for database / Diesel integration,
    # they are heavily inspired from Diesel's own CI:
    # https://github.com/diesel-rs/diesel/blob/c557ab1f6b14fca96823bd5d829e494304e38a16/.github/workflows/ci.yml#L159-L168
    - name: Install postgres (Windows)
      shell: bash
      run: |
        choco install postgresql12 --force --params '/Password:root'
        echo "C:\Program Files\PostgreSQL\12\bin" >> $GITHUB_PATH
        echo "C:\Program Files\PostgreSQL\12\lib" >> $GITHUB_PATH
        echo "PQ_LIB_DIR=C:\Program Files\PostgreSQL\12\lib" >> $GITHUB_ENV
    - name: Report cargo version
      run: cargo --version
    - name: Build
      run: cargo build --all-targets --verbose
    - name: Run tests
      run: cargo test --verbose -- --test-threads=1 cmd_run_recover

  build-and-test:
    if: runner.os == 'Windows'
      needs: windows-debug
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, windows-2019, macos-10.15 ]
    steps:
    # actions/checkout@v2
    - uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b
    - uses: actions-rs/toolchain@b223206e28798aa3c3668bdd6409258e6dc29172
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Report cargo version
      run: cargo --version
    - name: Build
      run: cargo build --tests --verbose
    - name: Run tests
      run: cargo test --verbose
